<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__User__CLASSMETADATA__' => 0,
'App__Entity__Plan__CLASSMETADATA__' => 1,
'App__Entity__Notification__CLASSMETADATA__' => 2,
'App__Entity__Transaction__CLASSMETADATA__' => 3,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'email' => $o[2],
                        'roles' => $o[3],
                        'password' => $o[4],
                        'balance' => $o[5],
                        'profit' => $o[6],
                        'bonus' => $o[7],
                        'totaldeposit' => $o[8],
                        'totalwithdrawal' => $o[9],
                        'name' => $o[10],
                        'image' => $o[11],
                        'phone' => $o[12],
                        'country' => $o[13],
                        'date' => $o[14],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'balance' => 'balance',
                        'profit' => 'profit',
                        'bonus' => 'bonus',
                        'totaldeposit' => 'totaldeposit',
                        'totalwithdrawal' => 'totalwithdrawal',
                        'name' => 'name',
                        'image' => 'image',
                        'phone' => 'phone',
                        'country' => 'country',
                        'date' => 'date',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'balance' => 'balance',
                        'profit' => 'profit',
                        'bonus' => 'bonus',
                        'totaldeposit' => 'totaldeposit',
                        'totalwithdrawal' => 'totalwithdrawal',
                        'name' => 'name',
                        'image' => 'image',
                        'phone' => 'phone',
                        'country' => 'country',
                        'date' => 'date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'referred' => $o[15],
                        'referrals' => $o[17],
                        'notifications' => $o[18],
                        'transactions' => $o[19],
                        'plans' => $o[20],
                    ],
                ],
                'idGenerator' => [
                    $o[21],
                ],
                'name' => [
                    'App\\Entity\\User',
                    16 => 'referred_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'json',
                    'string',
                    'float',
                    'float',
                    'float',
                    'float',
                    'float',
                    'string',
                    'string',
                    'string',
                    'string',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                    'balance',
                    'profit',
                    'bonus',
                    'totaldeposit',
                    'totalwithdrawal',
                    'name',
                    'image',
                    'phone',
                    'country',
                    'date',
                ],
                'columnName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                    'balance',
                    'profit',
                    'bonus',
                    'totaldeposit',
                    'totalwithdrawal',
                    'name',
                    'image',
                    'phone',
                    'country',
                    'date',
                ],
                'length' => [
                    2 => 180,
                    10 => 255,
                    255,
                    255,
                    255,
                ],
                'unique' => [
                    2 => true,
                ],
                'fetch' => [
                    15 => 2,
                    17 => 2,
                    2,
                    2,
                    2,
                ],
                'sourceEntity' => [
                    15 => 'App\\Entity\\User',
                    17 => 'App\\Entity\\User',
                    'App\\Entity\\User',
                    'App\\Entity\\User',
                    'App\\Entity\\User',
                ],
                'inversedBy' => [
                    15 => 'referrals',
                ],
                'sourceToTargetKeyColumns' => [
                    15 => [
                        'referred_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    15 => [
                        'id' => 'referred_id',
                    ],
                ],
                'joinColumns' => [
                    15 => [
                        $o[16],
                    ],
                ],
                'joinColumnFieldNames' => [
                    15 => [
                        'referred_id' => 'referred_id',
                    ],
                ],
                'referencedColumnName' => [
                    16 => 'id',
                ],
                'mappedBy' => [
                    17 => 'referred',
                    'user',
                    'user',
                    'user',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    15 => 'referred',
                    17 => 'referrals',
                    'notifications',
                    'transactions',
                    'plans',
                ],
                'targetEntity' => [
                    15 => 'App\\Entity\\User',
                    17 => 'App\\Entity\\User',
                    'App\\Entity\\Notification',
                    'App\\Entity\\Transaction',
                    'App\\Entity\\Plan',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Plan',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PlanRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'amount' => $o[3],
                        'startdate' => $o[4],
                        'enddate' => $o[5],
                        'complete' => $o[6],
                        'interest' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'amount' => 'amount',
                        'startdate' => 'startdate',
                        'enddate' => 'enddate',
                        'complete' => 'complete',
                        'interest' => 'interest',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'amount' => 'amount',
                        'startdate' => 'startdate',
                        'enddate' => 'enddate',
                        'complete' => 'complete',
                        'interest' => 'interest',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'plan',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[8],
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\Plan',
                    9 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'float',
                    'datetime',
                    'datetime',
                    'boolean',
                    'float',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'amount',
                    'startdate',
                    'enddate',
                    'complete',
                    'interest',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'amount',
                    'startdate',
                    'enddate',
                    'complete',
                    'interest',
                ],
                'length' => [
                    2 => 255,
                ],
                'nullable' => [
                    7 => true,
                ],
                'fetch' => [
                    8 => 2,
                ],
                'sourceEntity' => [
                    8 => 'App\\Entity\\Plan',
                ],
                'inversedBy' => [
                    8 => 'plans',
                ],
                'sourceToTargetKeyColumns' => [
                    8 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    8 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    8 => [
                        $o[9],
                    ],
                ],
                'joinColumnFieldNames' => [
                    8 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'referencedColumnName' => [
                    9 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    8 => 'user',
                ],
                'targetEntity' => [
                    8 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Notification',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\NotificationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'title' => $o[2],
                        'message' => $o[3],
                        'date' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'message' => 'message',
                        'date' => 'date',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'message' => 'message',
                        'date' => 'date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'notification',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Notification',
                    6 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'title',
                    'message',
                    'date',
                ],
                'columnName' => [
                    1 => 'id',
                    'title',
                    'message',
                    'date',
                ],
                'length' => [
                    2 => 255,
                    255,
                ],
                'fetch' => [
                    5 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Notification',
                ],
                'inversedBy' => [
                    5 => 'notifications',
                ],
                'sourceToTargetKeyColumns' => [
                    5 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    5 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    5 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'referencedColumnName' => [
                    6 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'user',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Transaction',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TransactionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'date' => $o[2],
                        'type' => $o[3],
                        'amount' => $o[4],
                        'description' => $o[5],
                        'image' => $o[6],
                        'status' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'type' => 'type',
                        'amount' => 'amount',
                        'description' => 'description',
                        'image' => 'image',
                        'status' => 'status',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'date' => 'date',
                        'type' => 'type',
                        'amount' => 'amount',
                        'description' => 'description',
                        'image' => 'image',
                        'status' => 'status',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'transaction',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[8],
                    ],
                ],
                'idGenerator' => [
                    $o[10],
                ],
                'name' => [
                    'App\\Entity\\Transaction',
                    9 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'datetime',
                    'string',
                    'float',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'date',
                    'type',
                    'amount',
                    'description',
                    'image',
                    'status',
                ],
                'columnName' => [
                    1 => 'id',
                    'date',
                    'type',
                    'amount',
                    'description',
                    'image',
                    'status',
                ],
                'length' => [
                    3 => 255,
                    5 => 255,
                    255,
                    255,
                ],
                'nullable' => [
                    5 => true,
                    true,
                    9 => false,
                ],
                'fetch' => [
                    8 => 2,
                ],
                'sourceEntity' => [
                    8 => 'App\\Entity\\Transaction',
                ],
                'inversedBy' => [
                    8 => 'transactions',
                ],
                'sourceToTargetKeyColumns' => [
                    8 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    8 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    8 => [
                        $o[9],
                    ],
                ],
                'joinColumnFieldNames' => [
                    8 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'unique' => [
                    9 => false,
                ],
                'referencedColumnName' => [
                    9 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    8 => 'user',
                ],
                'targetEntity' => [
                    8 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
