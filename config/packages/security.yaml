security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
            # form_login:
            #     # The route name that the login form submits to
            #     check_path: login
            #     # The name of the route where the login form lives
            #     # When the user tries to access a protected page, they are redirected here
            #     login_path: login
            #     # Secure the login form against CSRF
            #     # Reference: https://symfony.com/doc/current/security/csrf.html
            #     enable_csrf: true
            #     #csrf_token_generator: security.csrf.token_manager
            #     # The page users are redirect to when there is no previous page stored in the
            #     # session (for example when the users access directly to the login page).
            #     default_target_path: /dashboard
            #     username_parameter: email

            # This option allows users to choose to stay logged in for longer than
            # the session lasts using a cookie. Reference: https://symfony.com/doc/current/security/remember_me.html
            # remember_me:
            #     secret:   '%kernel.secret%' # required
            #     lifetime: 604800 # 1 week in seconds
            #     # by default, the feature is enabled by checking a checkbox in the
            #     # login form , uncomment the following line to always enable it.
            #     #always_remember_me: true
            #     path: /

            #logout:
                # The route name the user can go to in order to logout
            #    path: logout
                # The name of the route to redirect to after logging out
            #   target: home
                # Secure the logout against CSRF
                #enable_csrf: true

                
            # needed because in tests we redefine the 'main' firewall to use
            # HTTP Basic instead of the login form, so this firewall has
            # multiple authenticators
            # See https://symfony.com/doc/current/security/experimental_authenticators.html#configuring-the-authentication-entry-point
            # entry_point: 'login'

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/dashboard, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
